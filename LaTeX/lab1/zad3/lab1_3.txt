Komunikacja w sieci W modelu ISO-OSI (Open System Interconnection Reference Model) ca³± procedurê przesy³ania komunikatu podzielono na siedem warstw zajmuj±cych siê odrêbnymi zagadnieniami. W ka¿dej warstwie obowi±zuj± szczegó³owe zasady wymiany informacji, zwane protoko³em. Dziêki warstwowej strukturze model OSI jest bardzo elastyczny i daje siê stosowaæ do komunikacji zarówno w sieciach lokalnych, jak i rozleg³ych. Podzia³ na warstwy zwiêksza jednak czas przes³ania komunikatu i wyd³u¿a go, gdy¿ ka¿da warstwa dodaje w³asne informacje. Dlatego w szybkich sieciach lokalnych najni¿sze trzy warstwy zlewa siê w jedn±. Nie przeszkadza to komunikowaniu siê tym sieciom z innymi sieciami na wy¿szych poziomach. Warstwa 1: FIZYCZNA Jest ona odpowiedzialna za przesy³anie strumieni bitów. Odbiera ramki danych z warstwy 2 i przesy³a szeregowo, bit po bicie, ca³± ich strukturê oraz zawarto¶æ. Jest ona równie¿ odpowiedzialna za odbiór kolejnych bitów przychodz±cych strumieni danych. Strumienie te s± nastêpnie przesy³ane do warstwy ³±cza danych w celu ich ponownego ukszta³towania. Warstwa 2: £¡CZA DANYCH Jest ona odpowiedzialna za koñcow± zgodno¶æ przesy³ania danych. W zakresie zadañ zwi±zanych z przesy³aniem, warstwa ³±cza danych jest odpowiedzialna za upakowanie instrukcji, danych itp. w tzw. ramki. Ramka jest struktur± w³a¶ciw± dla warstwy ³±cza danych, która zawiera ilo¶æ informacji wystarczaj±c± do pomy¶lnego przesy³ania danych przez sieæ lokaln± do ich miejsca docelowego. Pomy¶lna transmisja danych zachodzi wtedy, gdy dane osi±gaj± miejsce docelowe w postaci niezmienionej w stosunku do postaci, w której zosta³y wys³ane. Ramka musi wiêc zawieraæ mechanizm umo¿liwiaj±cy weryfikowanie integralno¶ci jej zawarto¶ci podczas transmisji. W wielu sytuacjach wysy³ane ramki mog± nie osi±gn±æ miejsca docelowego lub ulec uszkodzeniu podczas transmisji. Warstwa ³±cza danych jest odpowiedzialna za rozpoznawanie i naprawê ka¿dego takiego b³êdu. Warstwa ³±cza danych jest równie¿ odpowiedzialna za ponowne sk³adanie otrzymanych z warstwy fizycznej strumieni binarnych i umieszczanie ich w ramkach. Ze wzglêdu na fakt przesy³ania zarówno struktury, jak i zawarto¶ci ramki, warstwa ³±cza danych nie tworzy ramek od nowa. Buforuje ona przychodz±ce bity dopóki nie uzbiera w ten sposób ca³ej ramki. Warstwa 3: SIECI Warstwa sieci jest odpowiedzialna za okre¶lenie trasy transmisji miêdzy komputerem-nadawc±, a komputerem-odbiorc±. Warstwa ta nie ma ¿adnych wbudowanych mechanizmów korekcji b³êdów i w zwi±zku z tym musi polegaæ na wiarygodnej transmisji koñcowej warstwy ³±cza danych. Warstwa sieci u¿ywana jest do komunikowania siê z komputerami znajduj±cymi siê poza lokalnym segmentem sieci LAN. Umo¿liwia im to w³asna architektura trasowania, niezale¿na od adresowania fizycznego warstwy 2. Korzystanie z warstwy sieci nie jest obowi±zkowe. Wymagane jest jedynie wtedy, gdy komputery komunikuj±ce siê znajduj± siê w ró¿nych segmentach sieci przedzielonych routerem. Najbardziej znanym protoko³em warstwy sieci jest protokó³ IP (Internet Protocol) obowi±zuj±cy w sieci Internet. Dzieli on przekazywany komunikat na odpowiedniej wielko¶ci (64 KB) pakiety i przesy³a je od komputera do komputera w kierunku komputera docelowego. IP nie gwarantuje dostarczenia pakietu na miejsce. Nie sprawdza on równie¿, czy pakiet, który dotar³ ju¿ do celu, nie zosta³ czasem przek³amany. Docieraniem pakietów na miejsce i ich poprawno¶ci± musi siê zajmowaæ wy¿sza warstwa transportu. IP wspó³pracuje z wieloma (do 256) protoko³ami warstwy transportu (takimi jak TCP, UDP czy ICMP). Ka¿dy pakiet ma w swym nag³ówku informacjê o tym, którego typu protoko³u transportu dotyczy. Warstwa 4: TRANSPORTU Warstwa ta pe³ni funkcjê podobn± do funkcji warstwy ³±cza w tym sensie, ¿e jest odpowiedzialna za koñcow± integralno¶æ transmisji. Jednak w odró¿nieniu od warstwy ³±cza danych -- warstwa transportu umo¿liwia tê us³ugê równie¿ poza lokalnymi segmentami sieci LAN. Potrafi bowiem wykrywaæ pakiety, które zosta³y przez routery odrzucone i automatycznie generowaæ ¿±danie ich ponownej transmisji. Warstwa transportu identyfikuje oryginaln± sekwencjê pakietów i ustawia je w oryginalnej kolejno¶ci przed wys³aniem ich zawarto¶ci do warstwy sesji. TCP (Transmission Control Protocol) jest najbardziej znanym protoko³em warstwy transportu. Po³±czenie w TCP jest nawi±zywane przez trzykrotne podanie sobie rêki. Niezawodno¶æ przesy³ania danych jest osi±gniêta dziêki numerowaniu pakietów, stosowaniu potwierdzeñ, ponownej transmisji, je¶li nie by³o potwierdzenia przez zbyt d³ugi czas. W celu zwiêkszenia przepustowo¶ci TCP stosuje tzw. metodê przesuwaj±cych siê okienek, która umo¿liwia wysy³anie kilku pakietów bez czekania na ich potwierdzenie. Warstwa 5: SESJI Jest ona rzadko u¿ywana; wiele protoko³ów funkcje tej warstwy do³±cza do swoich warstw transportowych. Zadaniem warstwy sesji jest zarz±dzanie przebiegiem komunikacji podczas po³±czenia miêdzy dwoma komputerami. Przep³yw tej komunikacji nazywany jest sesj±. Sesja mo¿e s³u¿yæ do do³±czenia u¿ytkownika do odleg³ego systemu, albo do przesy³ania zbiorów miêdzy ró¿nymi maszynami (np. polecenie ftp). Je¶li warstwa transportu jest zawodna, zadaniem warstwy sesji jest te¿ ponowne nawi±zanie po³±czenia w przypadku jego przerwania. Warstwa ta okre¶la, czy komunikacja mo¿e zachodziæ w jednym, czy obu kierunkach. Gwarantuje równie¿ zakoñczenie wykonywania bie¿±cego ¿±dania przed przyjêciem kolejnego. Jednym z najbardziej popularnych protoko³ów warstwy sieci jest protokó³ RPC (Remote Procedure Call  zdalne wywo³anie procedury). Protokó³ ten zajmuje siê wysy³aniem przez sieæ ¿±dañ od klientów do serwerów i odbieraniem odpowiedzi. RPC musi umieæ zlokalizowaæ komputer, na którym wykonuje siê serwer, reagowaæ w przypadku, gdy serwera nie ma oraz rejestrowaæ pojawienie siê nowych serwerów. Poniewa¿ program serwera mo¿e byæ wykonywany na komputerze o zupe³nie innej architekturze ni¿ architektura komputera, na którym jest wykonywany program klienta, protokó³ RPC musi zadbaæ o odpowiednie przekszta³cenie przesy³anych danych.  Je¶li odpowied¼ na wys³ane ¿±danie nie nadchodzi zbyt d³ugo, RPC ponawia wys³anie ¿±dania. Musi przy tym zadbaæ, by to ponowione ¿±danie nie zosta³o zrozumiane jako zupe³nie nowe. Za pomoc± protoko³u RPC mo¿na tak¿e realizowaæ rozg³aszanie, czyli wys³anie ¿±dania jednocze¶nie do wielu serwerów. Klient ma wówczas kilka mo¿liwo¶ci: mo¿e czekaæ na reakcje od wszystkich serwerów, gdy do dalszej pracy potrzebuje wszystkich us³ug; mo¿e czekaæ tylko na jeden serwer, je¶li wys³a³ komunikat typu niech mi to kto¶ zrobi; mo¿e te¿ nie czekaæ w ogóle, je¶li celem by³o jedynie poinformowanie o czym¶ serwerów. Protokó³ RPC jest ogólnie uznan± metod± komunikowania siê w systemach typu klient-serwer.  Warstwa 6: PREZENTACJI Warstwa prezentacji jest odpowiedzialna za zarz±dzanie sposobem kodowania wszelkich danych. Nie ka¿dy komputer korzysta z tych samych schematów kodowania danych, wiêc warstwa prezentacji odpowiedzialna jest za translacjê miêdzy niezgodnymi schematami kodowania danych. Warstwa ta mo¿e byæ równie¿ wykorzystywana do niwelowania ró¿nic miêdzy formatami zmiennopozycyjnymi, jak równie¿ do szyfrowania i rozszyfrowywania wiadomo¶ci.  W asymetrycznym systemie szyfrowania znajomo¶æ funkcji szyfruj±cej nie wystarcza do odgadniêcia funkcji rozszyfrowuj±cej. Funkcja szyfruj±ca S i funkcja deszyfruj±ca D maj± tak± w³asno¶æ, ¿e dla ka¿dego komunikatu K, D(S(K)) = K. Rozwi±zanie problemu elektronicznych podpisów sta³o siê mo¿liwe dziêki wynalezieniu funkcji, które maj± tak¿e w³asno¶æ odwrotn± S(D(K)) = K. W kryptosystemie asymetrycznym ka¿da ze stron ma dwa klucze: publiczny do szyfrowania i tajny do odszyfrowywania. Zaszyfrowaæ i wys³aæ komunikat mo¿e zatem ka¿dy, ale odczytaæ go potrafi tylko adresat. Informacj± o kluczach powinien zarz±dzaæ specjalny proces-centrala, którego klucz publiczny jest jedynym ogólnie dostêpnym. Aby zdobyæ informacjê o kluczu osoby X, wysy³a siê zapytanie do centrali (nieszyfrowane), a otrzymuje siê zaszyfrowan± odpowied¼, któr± mo¿na odszyfrowaæ kluczem publicznym. Warstwa 7: APLIKACJI Pe³ni ona rolê interfejsu pomiêdzy aplikacjami u¿ytkownika a us³ugami sieci. Warstwê tê mo¿na uwa¿aæ za inicjuj±c± sesje komunikacyjne. Protokó³y warstwy aplikacji to np.: HTTP, HTTPS, FTP, SSH, Telnet, POP3, SMTP. 
